{"version":3,"sources":["../../scripts/main.ts","../../scripts/maintenance.ts"],"sourcesContent":["import { world, system, ChatSendAfterEvent, PlayerJoinAfterEvent, PlayerSpawnAfterEvent } from \"@minecraft/server\";\nimport { version_documentation } from \"./maintenance\";\n\n// Globals\nconst BP_VERSION = 0;\nconst START_TICK = 100;\nconst VERSION_CHECK_SCOREBOARD = \"VERSION_CHECK_SCOREBOARD\"\nconst SERVER_NAME = \"재밌는 마크 서버\"\n\n// Entry Points\nsystem.run(mainSetup);\nworld.afterEvents.chatSend.subscribe(onPlayerChatSend)\nworld.afterEvents.playerSpawn.subscribe(onPlayerSpawn)\n\nlet initCounter = 0\n\n// Setup Function\nfunction mainSetup() {\n  if (initCounter < START_TICK){\n    initCounter++;\n    system.run(mainSetup);\n    return;\n  }\n}\n\n// Player Spawn Hook\nfunction onPlayerSpawn(eventData: PlayerSpawnAfterEvent){\n  if (!eventData.initialSpawn) {return;}\n  eventData.player.sendMessage(`${eventData.player.name}님, ${SERVER_NAME}에 접속한 것을 환영합니다!`)\n  eventData.player.sendMessage(`현재시간은 ${world.getDay()}일 ${Math.floor(world.getTimeOfDay()/ 1000)}시 ${Math.floor((world.getTimeOfDay() % 1000) / 1000 * 60)}분 입니다.`)\n  let joinedString = world.getAllPlayers().map(player => player.name).join(', ');\n  eventData.player.sendMessage(\"현재 접속자는 \" + joinedString +\"입니다.\");\n    \n  let vcScoreboard = world.scoreboard.getObjective(VERSION_CHECK_SCOREBOARD)\n  \n  // Initialize scoreboards if not present.\n  if (!vcScoreboard){\n    vcScoreboard = world.scoreboard.addObjective(VERSION_CHECK_SCOREBOARD, \"Player-Versions\")\n  }\n\n  // Add player if not present.\n  let is_newbie = false\n  let is_version_upgrade = false\n  if (!vcScoreboard.hasParticipant(eventData.player)){\n    is_newbie = true\n    is_version_upgrade = true\n  } else {\n    var s = vcScoreboard.getScore(eventData.player) \n    if (s != undefined && s != BP_VERSION){\n      is_version_upgrade = true\n    }\n  }\n  vcScoreboard.setScore(eventData.player, BP_VERSION)\n\n  if (is_version_upgrade && (BP_VERSION in version_documentation)){\n    eventData.player.sendMessage(`데이터팩 버전 1.0.${BP_VERSION}에 추가된 기능들: `)\n    eventData.player.sendMessage(version_documentation[BP_VERSION])\n  }\n}\n\nfunction onPlayerChatSend(eventData: ChatSendAfterEvent){\n  \n  let player = eventData.sender\n  let messageComponents = eventData.message.split(\" \")\n\n  if (messageComponents.length == 0) return\n  switch (messageComponents[0]){\n  \n    case \"!tp\": {\n      if (messageComponents.length != 2){\n        player.sendMessage(`tp > 사용법 '!tp <playername>'`)\n        player.sendMessage(\"접속중인 사용자:\")\n        world.getAllPlayers().forEach(target => {\n          player.sendMessage(\"    \" + target.name);\n        });\n        return\n      }\n      for (let target of world.getAllPlayers()) {\n        if (target.name == messageComponents[1]){\n          let tpSuccess = player.tryTeleport(target.location, {dimension: target.dimension})\n          if (tpSuccess){\n            player.sendMessage(`tp > ${target.name}에게 소환되었습니다.`)\n          } else {\n            player.sendMessage(`tp > ${target.name}는 현재 소환할 수 있는 위치가 아닙니다.`)\n          }\n          return\n        }\n      }\n      player.sendMessage(`tp > 이름 ${messageComponents[1]}은 유효하지 않습니다.`)\n      player.sendMessage(\"접속중인 사용자:\")\n      world.getAllPlayers().forEach(target => {\n        player.sendMessage(\"    \" + target.name);\n      });\n    }\n \n  }\n}\n","export const version_documentation = {\r\n  0 : \"    !tp <사용자 이름> -> 사용자에게 순간이동함.\"\r\n}"],"mappings":";AAAA,SAAS,OAAO,cAA+E;;;ACAxF,IAAM,wBAAwB;AAAA,EACnC,GAAI;AACN;;;ADEA,IAAM,aAAa;AACnB,IAAM,aAAa;AACnB,IAAM,2BAA2B;AACjC,IAAM,cAAc;AAGpB,OAAO,IAAI,SAAS;AACpB,MAAM,YAAY,SAAS,UAAU,gBAAgB;AACrD,MAAM,YAAY,YAAY,UAAU,aAAa;AAErD,IAAI,cAAc;AAGlB,SAAS,YAAY;AACnB,MAAI,cAAc,YAAW;AAC3B;AACA,WAAO,IAAI,SAAS;AACpB;AAAA,EACF;AACF;AAGA,SAAS,cAAc,WAAiC;AACtD,MAAI,CAAC,UAAU,cAAc;AAAC;AAAA,EAAO;AACrC,YAAU,OAAO,YAAY,GAAG,UAAU,OAAO,IAAI,WAAM,WAAW,wEAAiB;AACvF,YAAU,OAAO,YAAY,kCAAS,MAAM,OAAO,CAAC,UAAK,KAAK,MAAM,MAAM,aAAa,IAAG,GAAI,CAAC,UAAK,KAAK,MAAO,MAAM,aAAa,IAAI,MAAQ,MAAO,EAAE,CAAC,4BAAQ;AACjK,MAAI,eAAe,MAAM,cAAc,EAAE,IAAI,YAAU,OAAO,IAAI,EAAE,KAAK,IAAI;AAC7E,YAAU,OAAO,YAAY,2CAAa,eAAc,qBAAM;AAE9D,MAAI,eAAe,MAAM,WAAW,aAAa,wBAAwB;AAGzE,MAAI,CAAC,cAAa;AAChB,mBAAe,MAAM,WAAW,aAAa,0BAA0B,iBAAiB;AAAA,EAC1F;AAGA,MAAI,YAAY;AAChB,MAAI,qBAAqB;AACzB,MAAI,CAAC,aAAa,eAAe,UAAU,MAAM,GAAE;AACjD,gBAAY;AACZ,yBAAqB;AAAA,EACvB,OAAO;AACL,QAAI,IAAI,aAAa,SAAS,UAAU,MAAM;AAC9C,QAAI,KAAK,UAAa,KAAK,YAAW;AACpC,2BAAqB;AAAA,IACvB;AAAA,EACF;AACA,eAAa,SAAS,UAAU,QAAQ,UAAU;AAElD,MAAI,sBAAuB,cAAc,uBAAuB;AAC9D,cAAU,OAAO,YAAY,6CAAe,UAAU,gDAAa;AACnE,cAAU,OAAO,YAAY,sBAAsB,UAAU,CAAC;AAAA,EAChE;AACF;AAEA,SAAS,iBAAiB,WAA8B;AAEtD,MAAI,SAAS,UAAU;AACvB,MAAI,oBAAoB,UAAU,QAAQ,MAAM,GAAG;AAEnD,MAAI,kBAAkB,UAAU;AAAG;AACnC,UAAQ,kBAAkB,CAAC,GAAE;AAAA,IAE3B,KAAK,OAAO;AACV,UAAI,kBAAkB,UAAU,GAAE;AAChC,eAAO,YAAY,4CAA6B;AAChD,eAAO,YAAY,8CAAW;AAC9B,cAAM,cAAc,EAAE,QAAQ,YAAU;AACtC,iBAAO,YAAY,SAAS,OAAO,IAAI;AAAA,QACzC,CAAC;AACD;AAAA,MACF;AACA,eAAS,UAAU,MAAM,cAAc,GAAG;AACxC,YAAI,OAAO,QAAQ,kBAAkB,CAAC,GAAE;AACtC,cAAI,YAAY,OAAO,YAAY,OAAO,UAAU,EAAC,WAAW,OAAO,UAAS,CAAC;AACjF,cAAI,WAAU;AACZ,mBAAO,YAAY,QAAQ,OAAO,IAAI,0DAAa;AAAA,UACrD,OAAO;AACL,mBAAO,YAAY,QAAQ,OAAO,IAAI,yGAAyB;AAAA,UACjE;AACA;AAAA,QACF;AAAA,MACF;AACA,aAAO,YAAY,qBAAW,kBAAkB,CAAC,CAAC,2DAAc;AAChE,aAAO,YAAY,8CAAW;AAC9B,YAAM,cAAc,EAAE,QAAQ,YAAU;AACtC,eAAO,YAAY,SAAS,OAAO,IAAI;AAAA,MACzC,CAAC;AAAA,IACH;AAAA,EAEF;AACF;","names":[],"file":"../scripts/main.js"}